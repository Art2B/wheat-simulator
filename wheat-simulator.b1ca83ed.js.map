{"mappings":"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","sources":["<anon>","src/app.ts","src/components/Field/index.ts","src/components/Field/Fields.ts","src/Ressources.ts","src/Inventory.ts","src/Craft.ts"],"sourcesContent":["var $75694bcecc49708f$var$RESSOURCES = /*#__PURE__*/ function(RESSOURCES) {\n    RESSOURCES[RESSOURCES[\"wheat\"] = 0] = \"wheat\";\n    RESSOURCES[RESSOURCES[\"parsnip\"] = 1] = \"parsnip\";\n    RESSOURCES[RESSOURCES[\"bread\"] = 2] = \"bread\";\n    return RESSOURCES;\n}($75694bcecc49708f$var$RESSOURCES || {});\nconst $75694bcecc49708f$export$841023ab267afb18 = {\n    wheat: {\n        materials: null,\n        baseCraftTime: 1000,\n        farmable: true\n    },\n    parsnip: {\n        materials: null,\n        baseCraftTime: 1000,\n        farmable: true\n    },\n    bread: {\n        materials: [\n            {\n                type: \"wheat\",\n                quantity: 2\n            }\n        ],\n        baseCraftTime: 1000,\n        farmable: false\n    }\n};\nclass $75694bcecc49708f$export$9fc33702210b8eb9 {\n    static isRessource(key) {\n        return key in $75694bcecc49708f$var$RESSOURCES;\n    }\n    static isPlantableRessource(key) {\n        return key in $75694bcecc49708f$var$RESSOURCES && $75694bcecc49708f$export$841023ab267afb18[key].farmable;\n    }\n    static isCraftableRessource(key) {\n        return key in $75694bcecc49708f$var$RESSOURCES && Boolean($75694bcecc49708f$export$841023ab267afb18[key].materials);\n    }\n    static getRessourceFromString(key) {\n        if (key && $75694bcecc49708f$export$9fc33702210b8eb9.isRessource(key)) return key;\n        return null;\n    }\n}\nconst $75694bcecc49708f$export$8c8d9916f6e672dc = Object.entries($75694bcecc49708f$export$841023ab267afb18).filter(([key])=>{\n    return $75694bcecc49708f$export$9fc33702210b8eb9.isCraftableRessource(key);\n}).reduce((acc, [key, value])=>{\n    const ressource = $75694bcecc49708f$export$9fc33702210b8eb9.getRessourceFromString(key);\n    if (ressource) acc[ressource] = value;\n    return acc;\n}, {});\nconst $75694bcecc49708f$export$7a3443256adde32d = Object.entries($75694bcecc49708f$export$841023ab267afb18).filter(([key])=>{\n    return $75694bcecc49708f$export$9fc33702210b8eb9.isPlantableRessource(key);\n}).reduce((acc, [key, value])=>{\n    const ressource = $75694bcecc49708f$export$9fc33702210b8eb9.getRessourceFromString(key);\n    if (ressource) acc[ressource] = value;\n    return acc;\n}, {});\n\n\nvar $5696eb8076a42b7a$var$FieldStates = /*#__PURE__*/ function(FieldStates) {\n    FieldStates[\"fallow\"] = \"fallow\";\n    FieldStates[\"seeding\"] = \"seeding\";\n    FieldStates[\"growth\"] = \"growth\";\n    FieldStates[\"mature\"] = \"mature\";\n    return FieldStates;\n}($5696eb8076a42b7a$var$FieldStates || {});\nclass $5696eb8076a42b7a$export$a455218a85c89869 {\n    element;\n    actionsContainer;\n    _state = \"fallow\";\n    timeModifier = 1;\n    yieldModifier = 1;\n    ressource = null;\n    growingTimeout = null;\n    constructor(container){\n        this.state = \"fallow\";\n        this.element = this.generateFieldElement(container);\n        this.actionsContainer = this.generateActionContainer();\n        this.setActions();\n    }\n    get state() {\n        return this._state;\n    }\n    set state(value) {\n        this._state = value;\n        if (this.element) {\n            this.element.dataset.state = value;\n            this.setActions();\n        }\n    }\n    generateFieldElement(container) {\n        const field = document.createElement(\"field-block\");\n        field.dataset.state = this.state;\n        container.appendChild(field);\n        return field;\n    }\n    generateActionContainer() {\n        if (!this.element) throw new Error(\"There is no element in Field class\");\n        const actionsContainer = document.createElement(\"div\");\n        actionsContainer.setAttribute(\"slot\", \"actions\");\n        this.element.appendChild(actionsContainer);\n        return actionsContainer;\n    }\n    setActions() {\n        this.actionsContainer.innerHTML = \"\";\n        if (this.state === \"fallow\") this.generatePlantButtons();\n        else if (this.state === \"growth\" || this.state === \"seeding\") this.actionsContainer.innerHTML = `<button data-action=\"harvest\" disabled>Harvest field</button>`;\n        else if (this.state === \"mature\") {\n            this.actionsContainer.innerHTML = `<button data-action=\"harvest\">Harvest field</button>`;\n            this.actionsContainer.querySelectorAll('button[data-action=\"harvest\"]').forEach((el)=>{\n                el.addEventListener(\"click\", this.handleHarvest.bind(this));\n            });\n        }\n    }\n    generatePlantButtons() {\n        Object.keys((0, $75694bcecc49708f$export$7a3443256adde32d)).map((key)=>(0, $75694bcecc49708f$export$9fc33702210b8eb9).getRessourceFromString(key)).filter((ressource)=>!!ressource).forEach((ressource)=>{\n            const button = document.createElement(\"button\");\n            button.dataset.action = \"plant\";\n            button.dataset.ressource = ressource;\n            button.textContent = `Plant ${ressource}`;\n            button.addEventListener(\"click\", this.handleActionPlant.bind(this));\n            this.actionsContainer.appendChild(button);\n        });\n    }\n    handleActionPlant(e) {\n        const ressource = (0, $75694bcecc49708f$export$9fc33702210b8eb9).getRessourceFromString(e.target.dataset.ressource);\n        if (ressource && (0, $75694bcecc49708f$export$9fc33702210b8eb9).isPlantableRessource(ressource)) this.plant(ressource);\n    }\n    handleHarvest() {\n        this.state = \"fallow\";\n        if (this.ressource) window.$inventory[this.ressource] += 1 * this.yieldModifier;\n        this.ressource = null;\n        if (this.growingTimeout) clearTimeout(this.growingTimeout);\n        this.growingTimeout = null;\n    }\n    plant(ressource) {\n        this.state = \"seeding\";\n        this.ressource = ressource;\n        this.growingTimeout = setTimeout(()=>{\n            this.state = \"mature\";\n        }, (0, $75694bcecc49708f$export$841023ab267afb18)[ressource].baseCraftTime * this.timeModifier);\n    }\n}\n\n\n\n\n\nconst $5ae7324fb97e0b13$export$da12f8883f160a8f = (inventory)=>{\n    for (const [ressource, information] of Object.entries((0, $75694bcecc49708f$export$8c8d9916f6e672dc))){\n        const craftBtns = document.querySelectorAll(`[data-action=\"craft\"][data-ressource=\"${ressource}\"]`);\n        if (information.materials && information.materials.every((req)=>{\n            const inventoryValue = inventory[req.type];\n            return inventoryValue && inventoryValue >= req.quantity;\n        })) craftBtns.forEach((el)=>{\n            el.disabled = false;\n        });\n        else craftBtns.forEach((el)=>{\n            el.disabled = true;\n        });\n    }\n};\n\n\nconst $be5d85266d6de25d$var$defaultInventory = {\n    wheat: 0,\n    bread: 0,\n    parsnip: 0\n};\nconst $be5d85266d6de25d$var$inventoryProxyHandler = {\n    set (obj, prop, value) {\n        const result = Reflect.set(obj, prop, value);\n        const ressourceElements = document.querySelectorAll(`[data-inventory=\"${prop}\"]`);\n        if (ressourceElements.length > 0) ressourceElements.forEach((el)=>{\n            el.innerHTML = `${value} ${prop}`;\n        });\n        else {\n            const newInventoryEl = document.createElement(\"li\");\n            newInventoryEl.setAttribute(\"data-inventory\", prop);\n            newInventoryEl.innerText = `${value} ${prop}`;\n            document.querySelector(\"#ressource-list\")?.appendChild(newInventoryEl);\n        }\n        (0, $5ae7324fb97e0b13$export$da12f8883f160a8f)(obj);\n        return result;\n    }\n};\nfunction $be5d85266d6de25d$export$272c46e0a64ea914(defaultState = {}) {\n    const inventory = {\n        ...$be5d85266d6de25d$var$defaultInventory,\n        ...defaultState\n    };\n    return new Proxy(inventory, $be5d85266d6de25d$var$inventoryProxyHandler);\n}\n\n\n\nwindow.$inventory = (0, $be5d85266d6de25d$export$272c46e0a64ea914)();\nclass $f43313d21d3fd8e2$var$Actions {\n    static craft(ressource) {\n        console.log(\"Must craft this: \", ressource);\n        const materials = (0, $75694bcecc49708f$export$841023ab267afb18)[ressource].materials;\n        if (!materials || !materials.every((m)=>{\n            return window.$inventory[m.type] >= m.quantity;\n        })) return;\n        for (const material of materials)window.$inventory[material.type] -= material.quantity;\n        window.$inventory[ressource] += 1;\n    }\n}\ndocument.querySelectorAll('button[data-action=\"craft\"]').forEach((el)=>{\n    el.addEventListener(\"click\", (e)=>{\n        const ressource = (0, $75694bcecc49708f$export$9fc33702210b8eb9).getRessourceFromString(e.target.dataset.ressource);\n        if (ressource) $f43313d21d3fd8e2$var$Actions.craft(ressource);\n    });\n});\nconst $f43313d21d3fd8e2$var$fieldContainer = document.querySelector(\"#field-container\");\nif ($f43313d21d3fd8e2$var$fieldContainer) for(let i = 0; i < 3; i++)new (0, $5696eb8076a42b7a$export$a455218a85c89869)($f43313d21d3fd8e2$var$fieldContainer);\n\n\n//# sourceMappingURL=wheat-simulator.b1ca83ed.js.map\n","import { Field } from \"./components/Field\";\nimport { createInventory } from \"./Inventory\";\nimport {\n  RessourceHelpers,\n  Ressources,\n  RessourcesInformations,\n} from \"./Ressources\";\n\nwindow.$inventory = createInventory();\n\nclass Actions {\n  static craft(ressource: Ressources) {\n    console.log(\"Must craft this: \", ressource);\n\n    const materials = RessourcesInformations[ressource].materials;\n\n    if (\n      !materials ||\n      !materials.every((m) => {\n        return window.$inventory[m.type] >= m.quantity;\n      })\n    ) {\n      return;\n    }\n\n    for (const material of materials) {\n      window.$inventory[material.type] -= material.quantity;\n    }\n\n    window.$inventory[ressource] += 1;\n  }\n}\n\ndocument.querySelectorAll('button[data-action=\"craft\"]').forEach((el) => {\n  el.addEventListener(\"click\", (e) => {\n    const ressource = RessourceHelpers.getRessourceFromString(\n      (e.target as HTMLElement).dataset.ressource\n    );\n    if (ressource) {\n      Actions.craft(ressource);\n    }\n  });\n});\n\nconst fieldContainer = document.querySelector(\"#field-container\");\nif (fieldContainer) {\n  for (let i = 0; i < 3; i++) {\n    new Field(fieldContainer);\n  }\n}\n","export { Field } from \"./Fields\";\n","import {\n  FarmableRessourcesInformations,\n  RessourceHelpers,\n  Ressources,\n  RessourcesInformations,\n} from \"./../../Ressources\";\n\nenum FieldStates {\n  fallow = \"fallow\",\n  seeding = \"seeding\",\n  growth = \"growth\",\n  mature = \"mature\",\n}\nexport class Field {\n  element: HTMLElement;\n  actionsContainer: HTMLElement;\n  private _state: FieldStates = FieldStates.fallow;\n\n  private timeModifier: number = 1;\n  private yieldModifier: number = 1;\n  private ressource: Ressources | null = null;\n  private growingTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  constructor(container: Element) {\n    this.state = FieldStates.fallow;\n    this.element = this.generateFieldElement(container);\n    this.actionsContainer = this.generateActionContainer();\n    this.setActions();\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  set state(value: FieldStates) {\n    this._state = value;\n    if (this.element) {\n      this.element.dataset.state = value;\n      this.setActions();\n    }\n  }\n\n  private generateFieldElement(container: Element): HTMLElement {\n    const field = document.createElement(\"field-block\");\n    field.dataset.state = this.state;\n    container.appendChild(field);\n    return field;\n  }\n\n  private generateActionContainer() {\n    if (!this.element) {\n      throw new Error(\"There is no element in Field class\");\n    }\n\n    const actionsContainer = document.createElement(\"div\");\n    actionsContainer.setAttribute(\"slot\", \"actions\");\n    this.element.appendChild(actionsContainer);\n    return actionsContainer;\n  }\n\n  private setActions() {\n    this.actionsContainer.innerHTML = \"\";\n\n    if (this.state === FieldStates.fallow) {\n      this.generatePlantButtons();\n    } else if (\n      this.state === FieldStates.growth ||\n      this.state === FieldStates.seeding\n    ) {\n      this.actionsContainer.innerHTML = `<button data-action=\"harvest\" disabled>Harvest field</button>`;\n    } else if (this.state === FieldStates.mature) {\n      this.actionsContainer.innerHTML = `<button data-action=\"harvest\">Harvest field</button>`;\n      this.actionsContainer\n        .querySelectorAll('button[data-action=\"harvest\"]')\n        .forEach((el) => {\n          el.addEventListener(\"click\", this.handleHarvest.bind(this));\n        });\n    }\n  }\n\n  private generatePlantButtons() {\n    Object.keys(FarmableRessourcesInformations)\n      .map((key) => RessourceHelpers.getRessourceFromString(key))\n      .filter((ressource) => !!ressource)\n      .forEach((ressource) => {\n        const button = document.createElement(\"button\");\n        button.dataset.action = \"plant\";\n        button.dataset.ressource = ressource;\n        button.textContent = `Plant ${ressource}`;\n        button.addEventListener(\"click\", this.handleActionPlant.bind(this));\n        this.actionsContainer.appendChild(button);\n      });\n  }\n\n  private handleActionPlant(e: Event) {\n    const ressource = RessourceHelpers.getRessourceFromString(\n      (e.target as HTMLElement).dataset.ressource\n    );\n\n    if (ressource && RessourceHelpers.isPlantableRessource(ressource)) {\n      this.plant(ressource);\n    }\n  }\n\n  private handleHarvest() {\n    this.state = FieldStates.fallow;\n\n    if (this.ressource) {\n      window.$inventory[this.ressource] += 1 * this.yieldModifier;\n    }\n    this.ressource = null;\n\n    if (this.growingTimeout) {\n      clearTimeout(this.growingTimeout);\n    }\n    this.growingTimeout = null;\n  }\n\n  private plant(ressource: Ressources) {\n    this.state = FieldStates.seeding;\n\n    this.ressource = ressource;\n\n    this.growingTimeout = setTimeout(() => {\n      this.state = FieldStates.mature;\n    }, RessourcesInformations[ressource].baseCraftTime * this.timeModifier);\n  }\n}\n","enum RESSOURCES {\n  wheat,\n  parsnip,\n  bread,\n}\nexport type Ressources = keyof typeof RESSOURCES;\n\ninterface CraftingRequirement {\n  type: Ressources;\n  quantity: number;\n}\n\nexport interface RessourceInformation {\n  materials: CraftingRequirement[] | null;\n  baseCraftTime: number;\n  farmable: boolean;\n}\n\ntype RessourcesInformationsCollection = Record<\n  Ressources,\n  RessourceInformation\n>;\n\nexport const RessourcesInformations: Record<Ressources, RessourceInformation> =\n  {\n    wheat: {\n      materials: null,\n      baseCraftTime: 1000,\n      farmable: true,\n    },\n    parsnip: {\n      materials: null,\n      baseCraftTime: 1000,\n      farmable: true,\n    },\n    bread: {\n      materials: [\n        {\n          type: \"wheat\",\n          quantity: 2,\n        },\n      ],\n      baseCraftTime: 1000,\n      farmable: false,\n    },\n  };\n\nexport class RessourceHelpers {\n  static isRessource(key: string): boolean {\n    return key in RESSOURCES;\n  }\n\n  static isPlantableRessource(key: string): boolean {\n    return (\n      key in RESSOURCES && RessourcesInformations[key as Ressources].farmable\n    );\n  }\n\n  static isCraftableRessource(key: string): boolean {\n    return (\n      key in RESSOURCES &&\n      Boolean(RessourcesInformations[key as Ressources].materials)\n    );\n  }\n\n  static getRessourceFromString(key: string | undefined): Ressources | null {\n    if (key && RessourceHelpers.isRessource(key)) {\n      return key as Ressources;\n    }\n\n    return null;\n  }\n}\n\nexport const CraftableRessourcesInformations: Partial<RessourcesInformationsCollection> =\n  Object.entries(RessourcesInformations)\n    .filter(([key]) => {\n      return RessourceHelpers.isCraftableRessource(key);\n    })\n    .reduce<Partial<RessourcesInformationsCollection>>((acc, [key, value]) => {\n      const ressource = RessourceHelpers.getRessourceFromString(key);\n      if (ressource) {\n        acc[ressource] = value;\n      }\n      return acc;\n    }, {});\n\nexport const FarmableRessourcesInformations: Partial<RessourcesInformationsCollection> =\n  Object.entries(RessourcesInformations)\n    .filter(([key]) => {\n      return RessourceHelpers.isPlantableRessource(key);\n    })\n    .reduce<Partial<RessourcesInformationsCollection>>((acc, [key, value]) => {\n      const ressource = RessourceHelpers.getRessourceFromString(key);\n      if (ressource) {\n        acc[ressource] = value;\n      }\n      return acc;\n    }, {});\n","import { verifyInventoryToggleCraftBtns } from \"./Craft\";\nimport { Ressources } from \"./Ressources\";\n\nexport type Inventory = Record<Ressources, number>;\n\nconst defaultInventory: Inventory = {\n  wheat: 0,\n  bread: 0,\n  parsnip: 0,\n};\n\nconst inventoryProxyHandler = {\n  set(obj: Inventory, prop: Ressources, value: Inventory[keyof Inventory]) {\n    const result = Reflect.set(obj, prop, value);\n\n    const ressourceElements = document.querySelectorAll(\n      `[data-inventory=\"${prop}\"]`\n    );\n\n    if (ressourceElements.length > 0) {\n      ressourceElements.forEach((el) => {\n        el.innerHTML = `${value} ${prop}`;\n      });\n    } else {\n      const newInventoryEl = document.createElement(\"li\");\n      newInventoryEl.setAttribute(\"data-inventory\", prop);\n      newInventoryEl.innerText = `${value} ${prop}`;\n      document.querySelector(\"#ressource-list\")?.appendChild(newInventoryEl);\n    }\n\n    verifyInventoryToggleCraftBtns(obj);\n\n    return result;\n  },\n};\n\nexport function createInventory(\n  defaultState: Partial<Inventory> = {}\n): Inventory {\n  const inventory: Inventory = {\n    ...defaultInventory,\n    ...defaultState,\n  };\n\n  return new Proxy(inventory, inventoryProxyHandler);\n}\n","import { Inventory } from \"./Inventory\";\nimport { CraftableRessourcesInformations } from \"./Ressources\";\n\nexport const verifyInventoryToggleCraftBtns = (inventory: Inventory) => {\n  for (const [ressource, information] of Object.entries(\n    CraftableRessourcesInformations\n  )) {\n    const craftBtns = document.querySelectorAll<HTMLButtonElement>(\n      `[data-action=\"craft\"][data-ressource=\"${ressource}\"]`\n    );\n\n    if (\n      information.materials &&\n      information.materials.every((req) => {\n        const inventoryValue = inventory[req.type];\n        return inventoryValue && inventoryValue >= req.quantity;\n      })\n    ) {\n      craftBtns.forEach((el) => {\n        el.disabled = false;\n      });\n    } else {\n      craftBtns.forEach((el) => {\n        el.disabled = true;\n      });\n    }\n  }\n};\n"],"names":["RESSOURCES","FieldStates","$75694bcecc49708f$var$RESSOURCES","$75694bcecc49708f$export$841023ab267afb18","wheat","materials","baseCraftTime","farmable","parsnip","bread","type","quantity","$75694bcecc49708f$export$9fc33702210b8eb9","isRessource","key","isPlantableRessource","isCraftableRessource","Boolean","getRessourceFromString","$75694bcecc49708f$export$8c8d9916f6e672dc","Object","entries","filter","reduce","acc","value","ressource","$75694bcecc49708f$export$7a3443256adde32d","$5696eb8076a42b7a$var$FieldStates","$5696eb8076a42b7a$export$a455218a85c89869","element","actionsContainer","_state","timeModifier","yieldModifier","growingTimeout","container","state","generateFieldElement","generateActionContainer","setActions","dataset","field","document","createElement","appendChild","Error","setAttribute","innerHTML","generatePlantButtons","querySelectorAll","forEach","el","addEventListener","handleHarvest","bind","keys","map","button","action","textContent","handleActionPlant","e","target","plant","window","$inventory","clearTimeout","setTimeout","$be5d85266d6de25d$var$defaultInventory","$be5d85266d6de25d$var$inventoryProxyHandler","set","obj","prop","result","Reflect","ressourceElements","length","newInventoryEl","innerText","querySelector","information","craftBtns","every","req","inventoryValue","inventory","disabled","defaultState","Proxy","$f43313d21d3fd8e2$var$Actions","craft","console","log","m","material","$f43313d21d3fd8e2$var$fieldContainer","i"],"version":3,"file":"wheat-simulator.b1ca83ed.js.map"}