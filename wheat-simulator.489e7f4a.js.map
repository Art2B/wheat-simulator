{"mappings":"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","sources":["<anon>","src/app.ts","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/regex.js"],"sourcesContent":["const $7ffc1f94643dc7e4$var$randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar $7ffc1f94643dc7e4$export$2e2bcd8739ae039 = {\n    randomUUID: $7ffc1f94643dc7e4$var$randomUUID\n};\n\n\nlet $568f4ee4022ba00e$var$getRandomValues;\nconst $568f4ee4022ba00e$var$rnds8 = new Uint8Array(16);\nfunction $568f4ee4022ba00e$export$2e2bcd8739ae039() {\n    if (!$568f4ee4022ba00e$var$getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        $568f4ee4022ba00e$var$getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return $568f4ee4022ba00e$var$getRandomValues($568f4ee4022ba00e$var$rnds8);\n}\n\n\nvar $32c496bfb6c27b56$export$2e2bcd8739ae039 = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n\n\nfunction $46d323206dcbf256$var$validate(uuid) {\n    return typeof uuid === 'string' && (0, $32c496bfb6c27b56$export$2e2bcd8739ae039).test(uuid);\n}\nvar $46d323206dcbf256$export$2e2bcd8739ae039 = $46d323206dcbf256$var$validate;\n\n\nconst $1d0137947e8554ce$var$byteToHex = [];\nfor(let i = 0; i < 256; ++i)$1d0137947e8554ce$var$byteToHex.push((i + 0x100).toString(16).slice(1));\nfunction $1d0137947e8554ce$export$8fb373d660548968(arr, offset = 0) {\n    return ($1d0137947e8554ce$var$byteToHex[arr[offset + 0]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 1]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 2]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 3]] + '-' + $1d0137947e8554ce$var$byteToHex[arr[offset + 4]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 5]] + '-' + $1d0137947e8554ce$var$byteToHex[arr[offset + 6]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 7]] + '-' + $1d0137947e8554ce$var$byteToHex[arr[offset + 8]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 9]] + '-' + $1d0137947e8554ce$var$byteToHex[arr[offset + 10]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 11]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 12]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 13]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 14]] + $1d0137947e8554ce$var$byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction $1d0137947e8554ce$var$stringify(arr, offset = 0) {\n    const uuid = $1d0137947e8554ce$export$8fb373d660548968(arr, offset);\n    if (!(0, $46d323206dcbf256$export$2e2bcd8739ae039)(uuid)) throw TypeError('Stringified UUID is invalid');\n    return uuid;\n}\nvar $1d0137947e8554ce$export$2e2bcd8739ae039 = $1d0137947e8554ce$var$stringify;\n\n\nfunction $3fa3ae484854b431$var$v4(options, buf, offset) {\n    if ((0, $7ffc1f94643dc7e4$export$2e2bcd8739ae039).randomUUID && !buf && !options) return (0, $7ffc1f94643dc7e4$export$2e2bcd8739ae039).randomUUID();\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? (0, $568f4ee4022ba00e$export$2e2bcd8739ae039)();\n    if (rnds.length < 16) throw new Error('Random bytes length must be >= 16');\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        for(let i = 0; i < 16; ++i)buf[offset + i] = rnds[i];\n        return buf;\n    }\n    return (0, $1d0137947e8554ce$export$8fb373d660548968)(rnds);\n}\nvar $3fa3ae484854b431$export$2e2bcd8739ae039 = $3fa3ae484854b431$var$v4;\n\n\nwindow.inventory = {\n    wheat: 0,\n    parsnip: 0,\n    bread: 0\n};\nwindow.fields = [];\nconst $f43313d21d3fd8e2$var$CRAFTS = {\n    bread: {\n        ingredients: {\n            wheat: 2\n        }\n    }\n};\nconst $f43313d21d3fd8e2$var$checkCraft = (state)=>{\n    const breadCraftBtns = document.querySelectorAll('[data-action=\"craft\"][data-ressource=\"bread\"]');\n    if (state.wheat >= 2) breadCraftBtns.forEach((el)=>{\n        el.disabled = false;\n    });\n    else breadCraftBtns.forEach((el)=>{\n        el.disabled = true;\n    });\n};\nconst $f43313d21d3fd8e2$var$inventoryProxy = {\n    set (obj, prop, value) {\n        obj[prop] = value;\n        const ressourceElements = document.querySelectorAll(`[data-ressource=\"${prop}\"][data-inventory]`);\n        if (ressourceElements.length > 0) ressourceElements.forEach((el)=>{\n            el.innerHTML = `${value} ${prop}`;\n        });\n        else {\n            const newInventoryEl = document.createElement(\"li\");\n            newInventoryEl.setAttribute(\"data-ressource\", prop);\n            newInventoryEl.setAttribute(\"data-inventory\", \"\");\n            newInventoryEl.innerText = `${value} ${prop}`;\n            document.querySelector(\"#ressource-list\")?.appendChild(newInventoryEl);\n        }\n        $f43313d21d3fd8e2$var$checkCraft(obj);\n        return true;\n    }\n};\nconst $f43313d21d3fd8e2$var$plantElementProxy = {\n    set (obj, prop, value) {\n        console.log(\"Single element changed\", {\n            obj: obj,\n            prop: prop,\n            value: value\n        });\n        const harvestBtn = document.querySelector(`[data-action=\"harvest\"][data-ressource=\"${obj.ressource}\"]`);\n        obj[prop] = value;\n        if (obj.ready) {\n            console.log(\"Remove the disabled\");\n            harvestBtn.disabled = false;\n        }\n        return true;\n    }\n};\nconst $f43313d21d3fd8e2$var$fieldArrayValidator = {\n    set (obj, prop, value) {\n        console.log(\"Fields changed\", {\n            obj: obj,\n            prop: prop,\n            value: value\n        });\n        if (value.type === \"plant\") obj[prop] = new Proxy(value, $f43313d21d3fd8e2$var$plantElementProxy);\n        else obj[prop] = value;\n        if (obj.every((item)=>!item.ready)) {\n            const harvestBtns = document.querySelectorAll(`[data-action=\"harvest\"]`);\n            harvestBtns.forEach((el)=>el.disabled = true);\n        }\n        return true;\n    }\n};\nconst $f43313d21d3fd8e2$var$proxiedFields = new Proxy(window.fields, $f43313d21d3fd8e2$var$fieldArrayValidator);\nconst $f43313d21d3fd8e2$var$proxiedInventory = new Proxy(window.inventory, $f43313d21d3fd8e2$var$inventoryProxy);\nclass $f43313d21d3fd8e2$var$Actions {\n    static plant(ressource) {\n        console.log(\"Must plant this: \", ressource);\n        const id = (0, $3fa3ae484854b431$export$2e2bcd8739ae039)();\n        const data = {\n            id: id,\n            type: \"plant\",\n            ressource: ressource,\n            quantity: 1,\n            ready: false,\n            start: ((id)=>{\n                return setTimeout(()=>{\n                    console.log(\"ready for harvest\", id);\n                    const plantAction = $f43313d21d3fd8e2$var$proxiedFields.find((item)=>item.id === id);\n                    if (plantAction) plantAction.ready = true;\n                }, 1000);\n            }).bind(this, id)\n        };\n        $f43313d21d3fd8e2$var$proxiedFields.push(data);\n        data.start();\n    }\n    static harvest(ressource) {\n        console.log(\"Must harvest this: \", ressource);\n        const toHarvest = $f43313d21d3fd8e2$var$proxiedFields.filter((item)=>item.ready && item.ressource === ressource);\n        toHarvest.forEach((item)=>{\n            $f43313d21d3fd8e2$var$proxiedFields.splice($f43313d21d3fd8e2$var$proxiedFields.findIndex((i)=>i.id === item.id), 1);\n            $f43313d21d3fd8e2$var$proxiedInventory[item.ressource] += item.quantity;\n        });\n    }\n    static craft(ressource) {\n        console.log(\"Must craft this: \", ressource);\n        const ingredients = $f43313d21d3fd8e2$var$CRAFTS[ressource].ingredients;\n        for (const [r, quantity] of Object.entries(ingredients))$f43313d21d3fd8e2$var$proxiedInventory[r] -= quantity;\n        $f43313d21d3fd8e2$var$proxiedInventory[ressource] += 1;\n    }\n}\nconst $f43313d21d3fd8e2$var$handleButtonClick = (event)=>{\n    console.log(\"Clicked on button with action: \", event.target?.dataset.action, event.target?.dataset.ressource);\n    const action = event.target?.dataset.action;\n    if (action) {\n        const actionMethod = $f43313d21d3fd8e2$var$Actions[action];\n        if (typeof actionMethod === \"function\") actionMethod.call($f43313d21d3fd8e2$var$Actions, event.target?.dataset.ressource);\n    }\n};\ndocument.querySelectorAll(\"button\").forEach((el)=>{\n    el.addEventListener(\"click\", $f43313d21d3fd8e2$var$handleButtonClick);\n});\n\n\n//# sourceMappingURL=wheat-simulator.489e7f4a.js.map\n","import { v4 as uuid } from \"uuid\";\n\ntype PlantAction = {\n  id: string;\n  type: \"plant\";\n  ressource: string;\n  quantity: number;\n  ready: boolean;\n  start: () => number;\n};\n\ntype Inventory = {\n  wheat: number;\n  parsnip: number;\n  bread: number;\n};\n\nwindow.inventory = {\n  wheat: 0,\n  parsnip: 0,\n  bread: 0,\n} as Inventory;\n\nwindow.fields = [];\n\nconst CRAFTS = {\n  bread: {\n    ingredients: {\n      wheat: 2,\n    },\n  },\n};\n\nconst checkCraft = (state: Inventory) => {\n  const breadCraftBtns = document.querySelectorAll<HTMLButtonElement>(\n    '[data-action=\"craft\"][data-ressource=\"bread\"]'\n  );\n\n  if (state.wheat >= 2) {\n    breadCraftBtns.forEach((el) => {\n      el.disabled = false;\n    });\n  } else {\n    breadCraftBtns.forEach((el) => {\n      el.disabled = true;\n    });\n  }\n};\n\nconst inventoryProxy = {\n  set(obj, prop, value) {\n    obj[prop] = value;\n\n    const ressourceElements = document.querySelectorAll(\n      `[data-ressource=\"${prop}\"][data-inventory]`\n    );\n\n    if (ressourceElements.length > 0) {\n      ressourceElements.forEach((el) => {\n        el.innerHTML = `${value} ${prop}`;\n      });\n    } else {\n      const newInventoryEl = document.createElement(\"li\");\n      newInventoryEl.setAttribute(\"data-ressource\", prop);\n      newInventoryEl.setAttribute(\"data-inventory\", \"\");\n      newInventoryEl.innerText = `${value} ${prop}`;\n      document.querySelector(\"#ressource-list\")?.appendChild(newInventoryEl);\n    }\n\n    checkCraft(obj);\n\n    return true;\n  },\n};\n\nconst plantElementProxy = {\n  set(obj, prop, value) {\n    console.log(\"Single element changed\", { obj, prop, value });\n\n    const harvestBtn = document.querySelector(\n      `[data-action=\"harvest\"][data-ressource=\"${obj.ressource}\"]`\n    ) as HTMLButtonElement;\n\n    obj[prop] = value;\n\n    if (obj.ready) {\n      console.log(\"Remove the disabled\");\n      harvestBtn.disabled = false;\n    }\n\n    return true;\n  },\n};\n\nconst fieldArrayValidator = {\n  set(obj, prop, value) {\n    console.log(\"Fields changed\", { obj, prop, value });\n\n    if (value.type === \"plant\") {\n      obj[prop] = new Proxy(value, plantElementProxy);\n    } else {\n      obj[prop] = value;\n    }\n\n    if (obj.every((item) => !item.ready)) {\n      const harvestBtns = document.querySelectorAll<HTMLButtonElement>(\n        `[data-action=\"harvest\"]`\n      );\n      harvestBtns.forEach((el) => (el.disabled = true));\n    }\n\n    return true;\n  },\n};\n\nconst proxiedFields = new Proxy(window.fields, fieldArrayValidator);\nconst proxiedInventory = new Proxy(window.inventory, inventoryProxy);\n\nclass Actions {\n  static plant(ressource) {\n    console.log(\"Must plant this: \", ressource);\n    const id = uuid();\n\n    const data: PlantAction = {\n      id,\n      type: \"plant\",\n      ressource: ressource,\n      quantity: 1,\n      ready: false,\n      start: ((id) => {\n        return setTimeout(() => {\n          console.log(\"ready for harvest\", id);\n          const plantAction = proxiedFields.find((item) => item.id === id);\n          if (plantAction) {\n            plantAction.ready = true;\n          }\n        }, 1000);\n      }).bind(this, id),\n    };\n\n    proxiedFields.push(data);\n    data.start();\n  }\n\n  static harvest(ressource) {\n    console.log(\"Must harvest this: \", ressource);\n    const toHarvest = proxiedFields.filter(\n      (item) => item.ready && item.ressource === ressource\n    );\n\n    toHarvest.forEach((item) => {\n      proxiedFields.splice(\n        proxiedFields.findIndex((i) => i.id === item.id),\n        1\n      );\n      proxiedInventory[item.ressource] += item.quantity;\n    });\n  }\n\n  static craft(ressource) {\n    console.log(\"Must craft this: \", ressource);\n\n    const ingredients = CRAFTS[ressource].ingredients;\n\n    for (const [r, quantity] of Object.entries(ingredients)) {\n      proxiedInventory[r] -= quantity;\n    }\n\n    proxiedInventory[ressource] += 1;\n  }\n}\n\nconst handleButtonClick = (event: MouseEvent) => {\n  console.log(\n    \"Clicked on button with action: \",\n    (event.target as HTMLElement)?.dataset.action,\n    (event.target as HTMLElement)?.dataset.ressource\n  );\n\n  const action: string | undefined = (event.target as HTMLElement)?.dataset\n    .action;\n\n  if (action) {\n    const actionMethod = Actions[action];\n\n    if (typeof actionMethod === \"function\") {\n      actionMethod.call(\n        Actions,\n        (event.target as HTMLElement)?.dataset.ressource\n      );\n    }\n  }\n};\n\ndocument.querySelectorAll(\"button\").forEach((el) => {\n  el.addEventListener(\"click\", handleButtonClick);\n});\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import REGEX from './regex.js';\nfunction validate(uuid) {\n    return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;\n"],"names":["$568f4ee4022ba00e$var$getRandomValues","crypto","randomUUID","bind","$568f4ee4022ba00e$var$rnds8","Uint8Array","$1d0137947e8554ce$var$byteToHex","i","push","toString","slice","$3fa3ae484854b431$export$2e2bcd8739ae039","options","buf","offset","rnds","random","rng","getRandomValues","Error","length","RangeError","arr","toLowerCase","window","inventory","wheat","parsnip","bread","fields","$f43313d21d3fd8e2$var$CRAFTS","ingredients","$f43313d21d3fd8e2$var$plantElementProxy","set","obj","prop","value","console","log","harvestBtn","document","querySelector","ressource","ready","disabled","$f43313d21d3fd8e2$var$proxiedFields","Proxy","type","every","item","harvestBtns","querySelectorAll","forEach","el","$f43313d21d3fd8e2$var$proxiedInventory","ressourceElements","innerHTML","newInventoryEl","createElement","setAttribute","innerText","appendChild","breadCraftBtns","state","$f43313d21d3fd8e2$var$Actions","plant","id","data","quantity","start","setTimeout","plantAction","find","harvest","toHarvest","filter","splice","findIndex","craft","r","Object","entries","$f43313d21d3fd8e2$var$handleButtonClick","event","target","dataset","action","actionMethod","call","addEventListener"],"version":3,"file":"wheat-simulator.489e7f4a.js.map"}