{"mappings":"AGSO,SAAS,EACd,CAA2B,CAC3B,CAAkC,CAClC,GAAG,CAA8B,QAEjC,AAAI,AAAoB,YAApB,OAAO,EACF,IAIF,CAAE,SAAA,EAAU,WAAA,EAAY,SADhB,EAAK,MAAM,CAAG,IAAI,EAAK,CAAG,IACD,CAC1C,C,I,E,C,ECpBA,EAAiB,+jBFkBF,OAAA,UAAyB,YACtC,UAAuB,AAEvB,QAAO,mBAAqB,CAAC,aAAa,AAAC,AAE3C,cAAc,CACZ,KAAK,GAEL,IAAI,CAAC,UAAU,CAAG,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,GAEnD,IAAM,EAAc,SAAS,cAAc,CACzC,uBAGE,CAAA,GACF,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAY,OAAO,CAAC,SAAS,CAAC,CAAA,GAE9D,CAEA,OAAgB,OAAS,KACvB,eAAe,MAAM,CAAC,cAAe,EACvC,CAAE,AAEF,QAAgB,eAAiB,KAC/B,IAAM,EAAW,SAAS,aAAa,CAAC,YACxC,EAAS,YAAY,CAAC,KAAM,wBAG5B,IAAI,EAAQ,SAAS,aAAa,CAAC,QACnC,CAAA,EAAM,WAAW,CAAG,EACpB,EAAS,OAAO,CAAC,WAAW,CAAC,GAG7B,IAAM,EAAM,AC7BT,SAAS,EAAO,CAA2B,EAEhD,GAAI,AAAiB,UAAjB,OAAO,EACT,OAAO,SAAS,cAAc,CAAC,GAIjC,IAAM,EAAI,SAAS,aAAa,CAAC,EAAM,QAAQ,EAQ/C,OANA,OAAO,OAAO,CADN,EAAM,UAAU,EAAI,CAAC,GAE1B,MAAM,CAAC,CAAC,CAAC,EAAK,GAAK,CAAC,EAAK,UAAU,CAAC,OACpC,OAAO,CAAC,CAAC,CAAC,EAAM,EAAM,GAAK,EAAE,YAAY,CAAC,EAAM,IAElD,AAAA,CAAA,EAAM,QAAQ,EAAI,EAAC,AAAD,EAAI,OAAO,CAAC,AAAC,GAAM,EAAE,WAAW,CAAC,EAAO,KAEpD,CACT,EDhCI,AAAA,EAAC,MADH,CACO,MAAM,QAAQ,aAAW,QAC5B,EAAA,AAAA,EAAC,SAAD,CAAQ,MAAM,cAAc,GAAG,cAAc,cAAc,cACzD,EAAA,AAAA,EAAC,MAAD,CAAK,MAAM,cAGb,IAAA,AAAA,EAAC,MAAD,CAAK,MAAM,eAAe,GAAG,eAAe,QAAQ,MAClD,EAAA,AAAA,EAAC,OAAD,CAAM,KAAK,S,MAwCf,EAAS,OAAO,CAAC,WAAW,CAAC,GAE7B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAAE,AAEF,CAAA,mBAAoB,CAClB,QAAQ,GAAG,CAAC,gCACd,CAEA,sBAAuB,CACrB,QAAQ,GAAG,CAAC,oCACd,CAEA,uBAAwB,CACtB,QAAQ,GAAG,CAAC,yCACd,CAEA,iBAAkB,CAChB,QAAQ,GAAG,CAAC,oCACd,CAEA,yBAAyB,CAAY,CAAE,CAAgB,CAAE,CAAgB,CAAE,CACzE,IAAM,EAAQ,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,SACxC,AAAS,CAAA,eAAT,GAAyB,GAC3B,CAAA,EAAM,OAAO,CAAC,KAAK,CAAG,CADxB,CAGF,CACF,CD7EA,AAAA,EAAW,MAAM,GACjB,AAAA,EAAW,cAAc","sources":["<anon>","src/components/index.ts","src/components/Field/FieldBlock.tsx","libs/hyper.ts","node_modules/@parcel/runtime-js/lib/bundles/runtime-7ea881c4f5cb0492.js"],"sourcesContent":["/** @jsx h */ // ^^^^ this tells a transpiler to inject calls to an `h()` function for each node.\nfunction $fec5e68b75944648$export$dda1d9f60106f0e9(nodeName, attributes, ...args) {\n    if (typeof nodeName === \"function\") return nodeName();\n    let children = args.length ? [\n        ...args\n    ] : null;\n    return {\n        nodeName: nodeName,\n        attributes: attributes,\n        children: children\n    };\n}\nfunction $fec5e68b75944648$export$b3890eb0ae9dca99(vnode) {\n    // If string, insert text in page.\n    if (typeof vnode === \"string\") return document.createTextNode(vnode);\n    // Create DOM element from VNode\n    const n = document.createElement(vnode.nodeName);\n    let a = vnode.attributes || {};\n    Object.entries(a).filter(([name])=>!name.startsWith(\"__\")).forEach(([name, value])=>n.setAttribute(name, value));\n    (vnode.children || []).forEach((c)=>n.appendChild($fec5e68b75944648$export$b3890eb0ae9dca99(c)));\n    return n;\n}\n\n\nvar $cc3dadf71691a54a$exports = {};\n$cc3dadf71691a54a$exports = \".field{--state:attr(data-state raw-string,\\\"fallow\\\")}.field-visual{width:30px;height:30px}.menu-button{anchor-name:--menu-btn-anchor;cursor:pointer;border:none;padding:0}.menu-popover{position-anchor:--menu-btn-anchor;position-area:bottom center;margin:.5rem;position:absolute}@container style(--state:\\\"fallow\\\"){.field-visual{background-color:brown}}@container style(--state:\\\"seeding\\\"){.field-visual{background-color:#90ee90}}@container style(--state:\\\"growth\\\"){.field-visual{background-color:green}}@container style(--state:\\\"mature\\\"){.field-visual{background-color:#006400}}\";\n\n\nconst $3e79223b7b183c5d$var$FieldBlockTemplate = ()=>{\n    return /*#__PURE__*/ (0, $fec5e68b75944648$export$dda1d9f60106f0e9)(\"div\", {\n        class: \"field\",\n        \"data-state\": \"fallow\"\n    }, /*#__PURE__*/ (0, $fec5e68b75944648$export$dda1d9f60106f0e9)(\"button\", {\n        class: \"menu-button\",\n        id: \"menu-toggle\",\n        popovertarget: \"menu-actions\"\n    }, /*#__PURE__*/ (0, $fec5e68b75944648$export$dda1d9f60106f0e9)(\"div\", {\n        class: \"field-visual\"\n    })), /*#__PURE__*/ (0, $fec5e68b75944648$export$dda1d9f60106f0e9)(\"div\", {\n        class: \"menu-popover\",\n        id: \"menu-actions\",\n        popover: \"auto\"\n    }, /*#__PURE__*/ (0, $fec5e68b75944648$export$dda1d9f60106f0e9)(\"slot\", {\n        name: \"actions\"\n    })));\n};\nclass $3e79223b7b183c5d$export$2e2bcd8739ae039 extends HTMLElement {\n    shadowRoot;\n    static observedAttributes = [\n        \"data-state\"\n    ];\n    constructor(){\n        super();\n        this.shadowRoot = this.attachShadow({\n            mode: \"open\"\n        });\n        const templateDOM = document.getElementById(\"field-block-template\");\n        if (templateDOM) this.shadowRoot.appendChild(templateDOM.content.cloneNode(true));\n    }\n    static define = ()=>{\n        customElements.define(\"field-block\", $3e79223b7b183c5d$export$2e2bcd8739ae039);\n    };\n    static injectTemplate = ()=>{\n        const template = document.createElement(\"template\");\n        template.setAttribute(\"id\", \"field-block-template\");\n        // inject <style> tag\n        let style = document.createElement(\"style\");\n        style.textContent = $cc3dadf71691a54a$exports;\n        template.content.appendChild(style);\n        // Inject template DOM\n        const dom = (0, $fec5e68b75944648$export$b3890eb0ae9dca99)($3e79223b7b183c5d$var$FieldBlockTemplate());\n        template.content.appendChild(dom);\n        document.body.appendChild(template);\n    };\n    connectedCallback() {\n        console.log(\"Custom element added to page.\");\n    }\n    disconnectedCallback() {\n        console.log(\"Custom element removed from page.\");\n    }\n    connectedMoveCallback() {\n        console.log(\"Custom element moved with moveBefore()\");\n    }\n    adoptedCallback() {\n        console.log(\"Custom element moved to new page.\");\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n        const field = this.shadowRoot.querySelector(\".field\");\n        if (name === \"data-state\" && field) field.dataset.state = newValue;\n    }\n}\n\n\n(0, $3e79223b7b183c5d$export$2e2bcd8739ae039).define();\n(0, $3e79223b7b183c5d$export$2e2bcd8739ae039).injectTemplate();\n\n\n//# sourceMappingURL=wheat-simulator.c60d15f3.js.map\n","import FieldBlock from \"./Field/FieldBlock\";\n\nFieldBlock.define();\nFieldBlock.injectTemplate();\n","import { h, render } from \"@libs/hyper\";\n\nimport * as fieldCssText from \"bundle-text:./field.css\";\n\nconst FieldBlockTemplate = () => {\n  return (\n    <div class=\"field\" data-state=\"fallow\">\n      <button class=\"menu-button\" id=\"menu-toggle\" popovertarget=\"menu-actions\">\n        <div class=\"field-visual\"></div>\n      </button>\n\n      <div class=\"menu-popover\" id=\"menu-actions\" popover=\"auto\">\n        <slot name=\"actions\"></slot>\n      </div>\n    </div>\n  );\n};\n\nexport default class FieldBlock extends HTMLElement {\n  shadowRoot: ShadowRoot;\n\n  static observedAttributes = [\"data-state\"];\n\n  constructor() {\n    super();\n\n    this.shadowRoot = this.attachShadow({ mode: \"open\" });\n\n    const templateDOM = document.getElementById(\n      \"field-block-template\"\n    ) as HTMLTemplateElement | null;\n\n    if (templateDOM) {\n      this.shadowRoot.appendChild(templateDOM.content.cloneNode(true));\n    }\n  }\n\n  static readonly define = () => {\n    customElements.define(\"field-block\", FieldBlock);\n  };\n\n  static readonly injectTemplate = () => {\n    const template = document.createElement(\"template\");\n    template.setAttribute(\"id\", \"field-block-template\");\n\n    // inject <style> tag\n    let style = document.createElement(\"style\");\n    style.textContent = fieldCssText;\n    template.content.appendChild(style);\n\n    // Inject template DOM\n    const dom = render(FieldBlockTemplate());\n    template.content.appendChild(dom);\n\n    document.body.appendChild(template);\n  };\n\n  connectedCallback() {\n    console.log(\"Custom element added to page.\");\n  }\n\n  disconnectedCallback() {\n    console.log(\"Custom element removed from page.\");\n  }\n\n  connectedMoveCallback() {\n    console.log(\"Custom element moved with moveBefore()\");\n  }\n\n  adoptedCallback() {\n    console.log(\"Custom element moved to new page.\");\n  }\n\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    const field = this.shadowRoot.querySelector(\".field\") as HTMLElement;\n    if (name === \"data-state\" && field) {\n      field.dataset.state = newValue;\n    }\n  }\n}\n","/** @jsx h */\n// ^^^^ this tells a transpiler to inject calls to an `h()` function for each node.\n\ntype VirtualNode = {\n  nodeName: string;\n  attributes: Record<string, string>;\n  children: (string | VirtualNode)[];\n};\n\nexport function h(\n  nodeName: string | Function,\n  attributes: Record<string, string>,\n  ...args: (string | VirtualNode)[]\n) {\n  if (typeof nodeName === \"function\") {\n    return nodeName();\n  }\n\n  let children = args.length ? [...args] : null;\n  return { nodeName, attributes, children };\n}\n\nexport function render(vnode: VirtualNode | string) {\n  // If string, insert text in page.\n  if (typeof vnode === \"string\") {\n    return document.createTextNode(vnode);\n  }\n\n  // Create DOM element from VNode\n  const n = document.createElement(vnode.nodeName);\n  let a = vnode.attributes || {};\n  Object.entries(a)\n    .filter(([name]) => !name.startsWith(\"__\"))\n    .forEach(([name, value]) => n.setAttribute(name, value));\n\n  (vnode.children || []).forEach((c) => n.appendChild(render(c)));\n\n  return n;\n}\n","module.exports = \"108091d60d55e9be\";"],"names":["$fec5e68b75944648$export$dda1d9f60106f0e9","nodeName","attributes","args","children","length","$cc3dadf71691a54a$exports","$3e79223b7b183c5d$export$2e2bcd8739ae039","HTMLElement","shadowRoot","observedAttributes","attachShadow","mode","templateDOM","document","getElementById","appendChild","content","cloneNode","define","customElements","injectTemplate","template","createElement","setAttribute","style","textContent","dom","$fec5e68b75944648$export$b3890eb0ae9dca99","vnode","createTextNode","n","Object","entries","filter","name","startsWith","forEach","value","c","class","id","popovertarget","popover","body","connectedCallback","console","log","disconnectedCallback","connectedMoveCallback","adoptedCallback","attributeChangedCallback","oldValue","newValue","field","querySelector","dataset","state"],"version":3,"file":"wheat-simulator.c60d15f3.js.map"}